{"ast":null,"code":"var _jsxFileName = \"D:\\\\myprojects\\\\to-do-logical-loop\\\\client\\\\src\\\\screens\\\\ListScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Checkbox from '../components/Checkbox';\nimport IconButton from '../components/IconButton';\nimport Spacer from '../components/Spacer';\nimport TextButton from '../components/TextButton';\nimport useTaskStore from '../hooks/use-task-store';\nimport DeleteIcon from '../icons/DeleteIcon';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  width: 460px;\n`;\n_c = Container;\nconst List = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  padding: 45px 24px;\n`;\n_c2 = List;\nconst ListItem = styled.label`\n  align-items: center;\n  display: flex;\n  font-size: 18px;\n  padding: 4px 0;\n`;\n_c3 = ListItem;\nconst DeleteButton = styled(IconButton)`\n  visibility: hidden;\n\n  ${ListItem}:hover & {\n    visibility: visible;\n  }\n`;\n_c4 = DeleteButton;\nconst Input = styled.input`\n  background: rgba(0, 0, 0, 0.5);\n  border: none;\n  border-radius: 15px;\n  color: #fff;\n  padding: 20px 24px;\n`;\n_c5 = Input;\nconst ListScreen = () => {\n  _s();\n  const {\n    addTask,\n    tasks,\n    setTasks,\n    updateTaskCompletion\n  } = useTaskStore();\n  const [newTaskLabel, setNewTaskLabel] = useState('');\n  const handleNewTaskLabelChange = e => setNewTaskLabel(e.target.value);\n  const handleNewTaskKeyPress = e => {\n    if (e.key === 'Enter' && newTaskLabel !== '') {\n      addTask({\n        label: newTaskLabel\n      });\n\n      // promise instead of async await\n      axios.post('http://localhost:4000/users/create', newT).then(res => {\n        console.log(res.data);\n      }).catch(error => {\n        console.log(error);\n      });\n      setNewTaskLabel('');\n    }\n  };\n  const handleTaskCompleteChange = task => e => {\n    updateTaskCompletion(task.id, e.target.checked);\n  };\n  const handleTaskDeleteClick = handledTask => () => {\n    setTasks(tasks => tasks.filter(task => task.id !== handledTask.id));\n  };\n  const handleClearClick = () => setTasks(tasks => tasks.filter(task => !task.isComplete));\n  console.log(tasks);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: task.isComplete,\n          onChange: handleTaskCompleteChange(task)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n          width: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), task.label, /*#__PURE__*/_jsxDEV(Spacer, {\n          flex: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n          onClick: handleTaskDeleteClick(task),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n      height: 30\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Add a task\",\n      value: newTaskLabel,\n      onChange: handleNewTaskLabelChange,\n      onKeyPress: handleNewTaskKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n      height: 45\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextButton, {\n      onClick: handleClearClick,\n      style: {\n        alignSelf: 'center'\n      },\n      children: \"clear completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(ListScreen, \"L2X8rRJEeI24HNGe83zMcZADWho=\", false, function () {\n  return [useTaskStore];\n});\n_c6 = ListScreen;\nexport default ListScreen;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"List\");\n$RefreshReg$(_c3, \"ListItem\");\n$RefreshReg$(_c4, \"DeleteButton\");\n$RefreshReg$(_c5, \"Input\");\n$RefreshReg$(_c6, \"ListScreen\");","map":{"version":3,"names":["React","useState","styled","Checkbox","IconButton","Spacer","TextButton","useTaskStore","DeleteIcon","axios","Container","div","List","ListItem","label","DeleteButton","Input","input","ListScreen","addTask","tasks","setTasks","updateTaskCompletion","newTaskLabel","setNewTaskLabel","handleNewTaskLabelChange","e","target","value","handleNewTaskKeyPress","key","post","newT","then","res","console","log","data","catch","error","handleTaskCompleteChange","task","id","checked","handleTaskDeleteClick","handledTask","filter","handleClearClick","isComplete","map","alignSelf"],"sources":["D:/myprojects/to-do-logical-loop/client/src/screens/ListScreen.tsx"],"sourcesContent":["import React, { ChangeEvent, KeyboardEvent, useState } from 'react';\nimport styled from 'styled-components';\nimport Checkbox from '../components/Checkbox';\nimport IconButton from '../components/IconButton';\nimport Spacer from '../components/Spacer';\nimport TextButton from '../components/TextButton';\nimport useTaskStore from '../hooks/use-task-store';\nimport DeleteIcon from '../icons/DeleteIcon';\nimport { Task } from '../types';\nimport axios from 'axios';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  width: 460px;\n`;\n\nconst List = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 15px;\n  display: flex;\n  flex-direction: column;\n  padding: 45px 24px;\n`;\n\nconst ListItem = styled.label`\n  align-items: center;\n  display: flex;\n  font-size: 18px;\n  padding: 4px 0;\n`;\n\nconst DeleteButton = styled(IconButton)`\n  visibility: hidden;\n\n  ${ListItem}:hover & {\n    visibility: visible;\n  }\n`;\n\nconst Input = styled.input`\n  background: rgba(0, 0, 0, 0.5);\n  border: none;\n  border-radius: 15px;\n  color: #fff;\n  padding: 20px 24px;\n`;\n\ntype Props = {};\n\nconst ListScreen: React.FC<Props> = () => {\n  const { addTask, tasks, setTasks, updateTaskCompletion } = useTaskStore();\n  const [newTaskLabel, setNewTaskLabel] = useState('');\n\n  const handleNewTaskLabelChange = (e: ChangeEvent<HTMLInputElement>) =>\n    setNewTaskLabel(e.target.value);\n\n  const handleNewTaskKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter' && newTaskLabel !== '') {\n      addTask({ label: newTaskLabel });\n \n     // promise instead of async await\n      axios.post('http://localhost:4000/users/create', newT)\n      .then((res) => {\n          console.log(res.data)\n      }).catch((error) => {\n          console.log(error)\n      });\n      setNewTaskLabel('');\n    }\n  };\n\n  const handleTaskCompleteChange =\n    (task: Task) => (e: ChangeEvent<HTMLInputElement>) => {\n      updateTaskCompletion(task.id, e.target.checked);\n    };\n\n  const handleTaskDeleteClick = (handledTask: Task) => () => {\n    setTasks((tasks) => tasks.filter((task) => task.id !== handledTask.id));\n  };\n\n  const handleClearClick = () =>\n    setTasks((tasks) => tasks.filter((task) => !task.isComplete));\n\n  console.log(tasks);\n\n  return (\n    <Container>\n      <List>\n        {tasks.map((task) => (\n          <ListItem key={task.id}>\n            <Checkbox\n              checked={task.isComplete}\n              onChange={handleTaskCompleteChange(task)}\n            />\n            <Spacer width={24} />\n            {task.label}\n            <Spacer flex={1} />\n            <DeleteButton onClick={handleTaskDeleteClick(task)}>\n              <DeleteIcon />\n            </DeleteButton>\n          </ListItem>\n        ))}\n      </List>\n      <Spacer height={30} />\n      <Input\n        placeholder=\"Add a task\"\n        value={newTaskLabel}\n        onChange={handleNewTaskLabelChange}\n        onKeyPress={handleNewTaskKeyPress}\n      />\n      <Spacer height={45} />\n      <TextButton onClick={handleClearClick} style={{ alignSelf: 'center' }}>\n        clear completed\n      </TextButton>\n    </Container>\n  );\n};\n\nexport default ListScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}