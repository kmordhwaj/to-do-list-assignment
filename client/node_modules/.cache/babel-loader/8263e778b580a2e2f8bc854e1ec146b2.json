{"ast":null,"code":"var _jsxFileName = \"D:\\\\myprojects\\\\to-do-logical-loop\\\\client\\\\src\\\\screens\\\\FocusScreen.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled from 'styled-components';\nimport Button from '../components/Button';\nimport Spacer from '../components/Spacer';\nimport TextButton from '../components/TextButton';\nimport useTaskStore from '../hooks/use-task-store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n_c = Container;\nconst Task = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  font-size: 32px;\n  justify-content: center;\n  padding-bottom: 45px;\n`;\n_c2 = Task;\nconst FocusScreen = () => {\n  _s();\n  const {\n    focusedTask: task,\n    shuffleFocusedTask,\n    updateTaskCompletion\n  } = useTaskStore();\n  const handleMarkCompleted = () => {\n    if (task) updateTaskCompletion(task.id, true);\n  };\n  return task ? /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Task, {\n      children: task.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleMarkCompleted,\n      children: \"Mark completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n      height: 45\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextButton, {\n      onClick: shuffleFocusedTask,\n      children: \"nope\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No incomplete tasks. Yay!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(FocusScreen, \"aI2EadZaPnMwEAQyyfb2WtqXpsA=\", false, function () {\n  return [useTaskStore];\n});\n_c3 = FocusScreen;\nexport default FocusScreen;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Task\");\n$RefreshReg$(_c3, \"FocusScreen\");","map":{"version":3,"names":["React","styled","Button","Spacer","TextButton","useTaskStore","Container","div","Task","FocusScreen","focusedTask","task","shuffleFocusedTask","updateTaskCompletion","handleMarkCompleted","id","label"],"sources":["D:/myprojects/to-do-logical-loop/client/src/screens/FocusScreen.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Button from '../components/Button';\nimport Spacer from '../components/Spacer';\nimport TextButton from '../components/TextButton';\nimport useTaskStore from '../hooks/use-task-store';\n\nconst Container = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst Task = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  font-size: 32px;\n  justify-content: center;\n  padding-bottom: 45px;\n`;\n\ntype Props = {};\n\nconst FocusScreen: React.FC<Props> = () => {\n  const {\n    focusedTask: task,\n    shuffleFocusedTask,\n    updateTaskCompletion,\n  } = useTaskStore();\n\n  const handleMarkCompleted = () => {\n    if (task) updateTaskCompletion(task.id, true);\n  };\n\n  return task ? (\n    <Container>\n      <Task>{task.label}</Task>\n      <Button onClick={handleMarkCompleted}>Mark completed</Button>\n      <Spacer height={45} />\n      <TextButton onClick={shuffleFocusedTask}>nope</TextButton>\n    </Container>\n  ) : (\n    <div>No incomplete tasks. Yay!</div>\n  );\n};\n\nexport default FocusScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,YAAY,MAAM,yBAAyB;AAAC;AAEnD,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAI;AAC7B;AACA;AACA;AACA;AACA,CAAC;AAAC,KALID,SAAS;AAOf,MAAME,IAAI,GAAGP,MAAM,CAACM,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAPIC,IAAI;AAWV,MAAMC,WAA4B,GAAG,MAAM;EAAA;EACzC,MAAM;IACJC,WAAW,EAAEC,IAAI;IACjBC,kBAAkB;IAClBC;EACF,CAAC,GAAGR,YAAY,EAAE;EAElB,MAAMS,mBAAmB,GAAG,MAAM;IAChC,IAAIH,IAAI,EAAEE,oBAAoB,CAACF,IAAI,CAACI,EAAE,EAAE,IAAI,CAAC;EAC/C,CAAC;EAED,OAAOJ,IAAI,gBACT,QAAC,SAAS;IAAA,wBACR,QAAC,IAAI;MAAA,UAAEA,IAAI,CAACK;IAAK;MAAA;MAAA;MAAA;IAAA,QAAQ,eACzB,QAAC,MAAM;MAAC,OAAO,EAAEF,mBAAoB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB,eAC7D,QAAC,MAAM;MAAC,MAAM,EAAE;IAAG;MAAA;MAAA;MAAA;IAAA,QAAG,eACtB,QAAC,UAAU;MAAC,OAAO,EAAEF,kBAAmB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB;EAAA;IAAA;IAAA;IAAA;EAAA,QAChD,gBAEZ;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AACH,CAAC;AAAC,GArBIH,WAA4B;EAAA,QAK5BJ,YAAY;AAAA;AAAA,MALZI,WAA4B;AAuBlC,eAAeA,WAAW;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}