{"ast":null,"code":"var _s = $RefreshSig$();\nimport { shuffle } from 'lodash';\nimport { nanoid } from 'nanoid';\nimport { useContext, useEffect, useState } from 'react';\nimport TaskContext from '../contexts/task-store';\nconst useTaskStore = () => {\n  _s();\n  var _tasks$filter$;\n  const [tasks, setTasks] = useContext(TaskContext);\n  const [category, setCategory] = useContext(1);\n  const [focusedTaskId, setFocusedTaskId] = useState((_tasks$filter$ = tasks.filter(task => !task.isComplete)[0]) === null || _tasks$filter$ === void 0 ? void 0 : _tasks$filter$.id);\n  const addTask = task => {\n    const id = nanoid();\n    setTasks(tasks => [...tasks, {\n      id,\n      label: task.label,\n      isComplete: false\n    }]);\n    if (!focusedTaskId) setFocusedTaskId(id);\n  };\n  const updateTaskCompletion = (taskId, isComplete) => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === taskId) return {\n        ...task,\n        isComplete\n      };\n      return task;\n    }));\n  };\n  const focusedTask = tasks.find(task => task.id === focusedTaskId);\n  useEffect(() => {\n    var _tasks$filter$2;\n    if (focusedTask !== null && focusedTask !== void 0 && focusedTask.isComplete) setFocusedTaskId((_tasks$filter$2 = tasks.filter(task => !task.isComplete)[0]) === null || _tasks$filter$2 === void 0 ? void 0 : _tasks$filter$2.id);\n  }, [tasks, focusedTask]);\n  const shuffleFocusedTask = () => {\n    var _shuffle$;\n    setFocusedTaskId((_shuffle$ = shuffle(tasks.filter(task => !task.isComplete))[0]) === null || _shuffle$ === void 0 ? void 0 : _shuffle$.id);\n  };\n  const api = {\n    addTask,\n    focusedTask,\n    tasks,\n    setTasks,\n    shuffleFocusedTask,\n    updateTaskCompletion\n  };\n  return api;\n};\n_s(useTaskStore, \"DnUMG+so0QJ5b5qv/r/+J9gTVNg=\");\nexport default useTaskStore;","map":{"version":3,"names":["shuffle","nanoid","useContext","useEffect","useState","TaskContext","useTaskStore","tasks","setTasks","category","setCategory","focusedTaskId","setFocusedTaskId","filter","task","isComplete","id","addTask","label","updateTaskCompletion","taskId","map","focusedTask","find","shuffleFocusedTask","api"],"sources":["D:/myprojects/to-do-logical-loop/client/src/hooks/use-task-store.ts"],"sourcesContent":["import { shuffle } from 'lodash';\nimport { nanoid } from 'nanoid';\nimport { useContext, useEffect, useState } from 'react';\nimport TaskContext from '../contexts/task-store';\nimport { Task } from '../types';\n\nconst useTaskStore = () => {\n  const [tasks, setTasks] = useContext(TaskContext);\n  const [ category, setCategory] = useContext(1);\n\n  const [focusedTaskId, setFocusedTaskId] = useState<string | undefined>(\n    tasks.filter((task) => !task.isComplete)[0]?.id\n  );\n\n  const addTask = (task: Pick<Task, 'label'>) => {\n    const id = nanoid();\n    setTasks((tasks) => [\n      ...tasks,\n      { id, label: task.label, isComplete: false },\n    ]);\n    if (!focusedTaskId) setFocusedTaskId(id);\n  };\n\n  const updateTaskCompletion = (taskId: string, isComplete: boolean) => {\n    setTasks((tasks) =>\n      tasks.map((task) => {\n        if (task.id === taskId) return { ...task, isComplete };\n        return task;\n      })\n    );\n  };\n\n  const focusedTask = tasks.find((task) => task.id === focusedTaskId);\n\n  useEffect(() => {\n    if (focusedTask?.isComplete)\n      setFocusedTaskId(tasks.filter((task) => !task.isComplete)[0]?.id);\n  }, [tasks, focusedTask]);\n\n  const shuffleFocusedTask = () => {\n    setFocusedTaskId(shuffle(tasks.filter((task) => !task.isComplete))[0]?.id);\n  };\n\n  const api = {\n    addTask,\n    focusedTask,\n    tasks,\n    setTasks,\n    shuffleFocusedTask,\n    updateTaskCompletion,\n  };\n\n  return api;\n};\n\nexport default useTaskStore;\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,QAAQ;AAChC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,OAAOC,WAAW,MAAM,wBAAwB;AAGhD,MAAMC,YAAY,GAAG,MAAM;EAAA;EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,UAAU,CAACG,WAAW,CAAC;EACjD,MAAM,CAAEI,QAAQ,EAAEC,WAAW,CAAC,GAAGR,UAAU,CAAC,CAAC,CAAC;EAE9C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,mBAChDG,KAAK,CAACM,MAAM,CAAEC,IAAI,IAAK,CAACA,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC,mDAA3C,eAA6CC,EAAE,CAChD;EAED,MAAMC,OAAO,GAAIH,IAAyB,IAAK;IAC7C,MAAME,EAAE,GAAGf,MAAM,EAAE;IACnBO,QAAQ,CAAED,KAAK,IAAK,CAClB,GAAGA,KAAK,EACR;MAAES,EAAE;MAAEE,KAAK,EAAEJ,IAAI,CAACI,KAAK;MAAEH,UAAU,EAAE;IAAM,CAAC,CAC7C,CAAC;IACF,IAAI,CAACJ,aAAa,EAAEC,gBAAgB,CAACI,EAAE,CAAC;EAC1C,CAAC;EAED,MAAMG,oBAAoB,GAAG,CAACC,MAAc,EAAEL,UAAmB,KAAK;IACpEP,QAAQ,CAAED,KAAK,IACbA,KAAK,CAACc,GAAG,CAAEP,IAAI,IAAK;MAClB,IAAIA,IAAI,CAACE,EAAE,KAAKI,MAAM,EAAE,OAAO;QAAE,GAAGN,IAAI;QAAEC;MAAW,CAAC;MACtD,OAAOD,IAAI;IACb,CAAC,CAAC,CACH;EACH,CAAC;EAED,MAAMQ,WAAW,GAAGf,KAAK,CAACgB,IAAI,CAAET,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKL,aAAa,CAAC;EAEnER,SAAS,CAAC,MAAM;IAAA;IACd,IAAImB,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEP,UAAU,EACzBH,gBAAgB,oBAACL,KAAK,CAACM,MAAM,CAAEC,IAAI,IAAK,CAACA,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC,oDAA3C,gBAA6CC,EAAE,CAAC;EACrE,CAAC,EAAE,CAACT,KAAK,EAAEe,WAAW,CAAC,CAAC;EAExB,MAAME,kBAAkB,GAAG,MAAM;IAAA;IAC/BZ,gBAAgB,cAACZ,OAAO,CAACO,KAAK,CAACM,MAAM,CAAEC,IAAI,IAAK,CAACA,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,8CAApD,UAAsDC,EAAE,CAAC;EAC5E,CAAC;EAED,MAAMS,GAAG,GAAG;IACVR,OAAO;IACPK,WAAW;IACXf,KAAK;IACLC,QAAQ;IACRgB,kBAAkB;IAClBL;EACF,CAAC;EAED,OAAOM,GAAG;AACZ,CAAC;AAAC,GA/CInB,YAAY;AAiDlB,eAAeA,YAAY"},"metadata":{},"sourceType":"module"}